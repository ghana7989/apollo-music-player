{"version":3,"sources":["components/Header.js","graphql/mutations.js","components/AddSong.js","graphql/subscriptions.js","components/SongList.js","components/QueuedSongList.js","graphql/queries.js","components/SongPlayer.js","reducer.js","App.js","theme.js","graphql/client.js","index.js"],"names":["useStyles","makeStyles","theme","title","marginLeft","spacing","Header","classes","AppBar","color","position","Toolbar","HeadsetTwoTone","Typography","className","variant","component","ADD_OR_REMOVE_FROM_QUEUE","gql","ADD_SONG","container","display","alignItems","urlInput","margin","addSongButton","dialog","textAlign","thumbnail","width","DEFAULT_SONG","duration","artist","AddSong","useMutation","addSong","error","React","useState","url","setUrl","playable","setPlayable","setDialog","song","setSong","handleChangeSong","event","target","name","value","prevSong","handleCloseDialog","a","player","nestedPlayer","getVideoData","songData","getYoutubeInfo","getCurrentSound","getSoundcloudInfo","variables","length","console","getDuration","video_id","author","Promise","resolve","Number","user","username","artwork_url","replace","handleError","field","graphQLErrors","extensions","path","includes","useEffect","isPlayable","SoundcloudPlayer","canPlay","YoutubePlayer","Dialog","open","onClose","DialogTitle","DialogContent","src","alt","TextField","onChange","label","fullWidth","helperText","DialogActions","Button","onClick","placeholder","type","InputProps","startAdornment","InputAdornment","Link","disabled","endIcon","AddBoxOutlined","hidden","onReady","GET_SONGS","songInfoContainer","songInfo","justifyContent","objectFit","height","Song","id","onCompleted","data","localStorage","setItem","JSON","stringify","addOrRemoveFromQueue","useContext","SongContext","state","dispatch","currentSongPlaying","setCurrentSongPlaying","isSongPlaying","isPlaying","Card","CardMedia","image","CardContent","gutterBottom","CardActions","IconButton","payload","size","Pause","PlayArrow","input","__typename","Save","SongList","useSubscription","loading","style","flexDirection","marginTop","CircularProgress","songs","map","key","avatar","text","textOverflow","overflow","gridAutoFlow","gridTemplateColumns","gridGap","whiteSpace","QueuedSong","Avatar","Delete","QueuedSongList","queue","useMediaQuery","breakpoints","up","GET_QUEUED_SONGS","details","padding","content","flex","controls","paddingLeft","paddingRight","playIcon","SongPlayer","useQuery","reactPlayerRef","useRef","played","setPlayed","playedSeconds","setPlayedSeconds","seeking","setSeeking","positionInQueue","setPositionInQueue","songIndex","findIndex","nextSong","SkipPrevious","SkipNext","Date","toISOString","substr","Slider","onMouseDown","onMouseUp","current","seekTo","newValue","min","max","step","ref","onProgress","playing","songReducer","action","createContext","App","initialSongState","useReducer","greaterThanSm","greaterThanMd","Provider","Hidden","only","Grid","paddingTop","item","xs","md","right","top","left","bottom","createMuiTheme","palette","primary","teal","secondary","purple","client","ApolloClient","link","WebSocketLink","uri","options","reconnect","cache","InMemoryCache","typeDefs","resolvers","Mutation","_","queryResult","readQuery","query","newQueue","some","filter","writeQuery","Boolean","getItem","parse","writeData","ReactDOM","render","CssBaseline","document","getElementById"],"mappings":"uQAIMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,MAAO,CACLC,WAAYF,EAAMG,QAAQ,QAmBfC,MAff,WACE,IAAMC,EAAUP,IAEhB,OACE,kBAACQ,EAAA,EAAD,CAAQC,MAAM,UAAUC,SAAS,SAC/B,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAYC,UAAWP,EAAQJ,MAAOY,QAAQ,KAAKC,UAAU,MAA7D,yB,iyBCfD,IAAMC,EAA2BC,YAAH,KAMxBC,EAAWD,YAAH,KCUflB,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCkB,UAAW,CACTC,QAAS,OACTC,WAAY,UAEdC,SAAU,CACRC,OAAQtB,EAAMG,QAAQ,IAExBoB,cAAe,CACbD,OAAQtB,EAAMG,QAAQ,IAExBqB,OAAQ,CACNC,UAAW,UAEbC,UAAW,CACTC,MAAO,WAILC,EAAe,CACnBC,SAAU,EACV5B,MAAO,GACP6B,OAAQ,GACRJ,UAAW,IAiLEK,MA9Kf,WACE,IAAM1B,EAAUP,IADC,EAEYkC,YAAYf,GAFxB,mBAEVgB,EAFU,KAECC,EAFD,KAECA,MAFD,EAGKC,IAAMC,SAAS,IAHpB,mBAGVC,EAHU,KAGLC,EAHK,OAIeH,IAAMC,UAAS,GAJ9B,mBAIVG,EAJU,KAIAC,EAJA,OAKWL,IAAMC,UAAS,GAL1B,mBAKVZ,EALU,KAKFiB,EALE,OAMON,IAAMC,SAASR,GANtB,mBAMVc,EANU,KAMJC,EANI,KAcjB,SAASC,EAAiBC,GAAQ,IAAD,EACPA,EAAMC,OAAtBC,EADuB,EACvBA,KAAMC,EADiB,EACjBA,MACdL,GAAQ,SAAAM,GAAQ,sBACXA,EADW,eAEbF,EAAOC,OAIZ,SAASE,IACPT,GAAU,GAvBK,4CA0BjB,iCAAAU,EAAA,yDAAgCC,EAAhC,EAAgCA,SACxBC,EAAeD,EAAOA,OAAOA,QAElBE,aAHnB,gBAIIC,EAAWC,EAAeH,GAJ9B,2BAKaA,EAAaI,gBAL1B,iCAMqBC,EAAkBL,GANvC,OAMIE,EANJ,eAQEZ,EAAQ,eAAKY,EAAN,CAAgBlB,SARzB,6CA1BiB,kEAqCjB,oCAAAc,EAAA,sEAEYd,EAA4CK,EAA5CL,IAAKX,EAAuCgB,EAAvChB,UAAWG,EAA4Ba,EAA5Bb,SAAU5B,EAAkByC,EAAlBzC,MAAO6B,EAAWY,EAAXZ,OAF7C,SAGUG,EAAQ,CACZ0B,UAAW,CACTtB,IAAKA,EAAIuB,OAAS,EAAIvB,EAAM,KAC5BX,UAAWA,EAAUkC,OAAS,EAAIlC,EAAY,KAC9CG,SAAUA,EAAW,EAAIA,EAAW,KACpC5B,MAAOA,EAAM2D,OAAS,EAAI3D,EAAQ,KAClC6B,OAAQA,EAAO8B,OAAS,EAAI9B,EAAS,QAT7C,OAYIoB,IACAP,EAAQf,GACRU,EAAO,IAdX,gDAgBIuB,QAAQ3B,MAAM,oBAAd,MAhBJ,0DArCiB,sBAyDjB,SAASsB,EAAeJ,GACtB,IAAMvB,EAAWuB,EAAOU,cADM,EAEMV,EAAOE,eAAnCrD,EAFsB,EAEtBA,MAAO8D,EAFe,EAEfA,SAEf,MAAO,CACLlC,WACA5B,QACA6B,OAP4B,EAELkC,OAMvBtC,UALa,oCAAgCqC,EAAhC,WASjB,SAASL,EAAkBN,GACzB,OAAO,IAAIa,SAAQ,SAAAC,GACjBd,EAAOK,iBAAgB,SAAAF,GACjBA,GACFW,EAAQ,CACNrC,SAAUsC,OAAOZ,EAAS1B,SAAW,KACrC5B,MAAOsD,EAAStD,MAChB6B,OAAQyB,EAASa,KAAKC,SACtB3C,UAAW6B,EAASe,YAAYC,QAAQ,SAAU,qBAO5D,SAASC,EAAYC,GAAQ,IAAD,IAC1B,cAAOvC,QAAP,IAAOA,GAAP,UAAOA,EAAOwC,cAAc,UAA5B,iBAAO,EAAyBC,kBAAhC,aAAO,EAAqCC,KAAKC,SAASJ,GA7E5DtC,IAAM2C,WAAU,WACd,IAAMC,EACJC,IAAiBC,QAAQ5C,IAAQ6C,IAAcD,QAAQ5C,GACzDG,EAAYuC,KACX,CAAC1C,IAZa,IAwFTX,EAA6BgB,EAA7BhB,UAAWzB,EAAkByC,EAAlBzC,MAAO6B,EAAWY,EAAXZ,OAC1B,OACE,yBAAKlB,UAAWP,EAAQa,WACtB,kBAACiE,EAAA,EAAD,CACEvE,UAAWP,EAAQmB,OACnB4D,KAAM5D,EACN6D,QAASnC,GAET,kBAACoC,EAAA,EAAD,kBACA,kBAACC,EAAA,EAAD,KACE,yBACEC,IAAK9D,EACL+D,IAAI,iBACJ7E,UAAWP,EAAQqB,YAErB,kBAACgE,EAAA,EAAD,CACE1C,MAAO/C,EACP0F,SAAU/C,EACVtB,OAAO,QACPyB,KAAK,QACL6C,MAAM,QACNC,WAAS,EACT3D,MAAOsC,EAAY,SACnBsB,WAAYtB,EAAY,UAAY,mBAEtC,kBAACkB,EAAA,EAAD,CACE1C,MAAOlB,EACP6D,SAAU/C,EACVtB,OAAO,QACPyB,KAAK,SACL6C,MAAM,SACNC,WAAS,EACT3D,MAAOsC,EAAY,UACnBsB,WAAYtB,EAAY,WAAa,mBAEvC,kBAACkB,EAAA,EAAD,CACE1C,MAAOtB,EACPiE,SAAU/C,EACVtB,OAAO,QACPyB,KAAK,YACL6C,MAAM,YACNC,WAAS,EACT3D,MAAOsC,EAAY,aACnBsB,WAAYtB,EAAY,cAAgB,oBAG5C,kBAACuB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,QAAS/C,EAAmB3C,MAAM,aAA1C,UAGA,kBAACyF,EAAA,EAAD,CAAQC,QA1IC,2CA0IuBpF,QAAQ,WAAWN,MAAM,WAAzD,cAKJ,kBAACmF,EAAA,EAAD,CACE9E,UAAWP,EAAQgB,SACnBsE,SAAU,SAAA9C,GAAK,OAAIP,EAAOO,EAAMC,OAAOE,QACvCA,MAAOX,EACP6D,YAAY,gCACZL,WAAS,EACTvE,OAAO,SACP6E,KAAK,MACLC,WAAY,CACVC,eACE,kBAACC,EAAA,EAAD,CAAgB9F,SAAS,SACvB,kBAAC+F,EAAA,EAAD,UAKR,kBAACP,EAAA,EAAD,CACEQ,UAAWjE,EACX3B,UAAWP,EAAQkB,cACnB0E,QAAS,kBAAMxD,GAAU,IACzB5B,QAAQ,YACRN,MAAM,UACNkG,QAAS,kBAACC,EAAA,EAAD,OANX,OAUA,kBAAC,IAAD,CAAarE,IAAKA,EAAKsE,QAAM,EAACC,QAzKjB,gD,+TC1CZ,IAAMC,GAAY7F,YAAH,MCiDtB,IAAMlB,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCkB,UAAW,CACTI,OAAQtB,EAAMG,QAAQ,IAExB2G,kBAAmB,CACjB3F,QAAS,OACTC,WAAY,UAEd2F,SAAU,CACRpF,MAAO,OACPR,QAAS,OACT6F,eAAgB,iBAElBtF,UAAW,CACTuF,UAAW,QACXtF,MAAO,IACPuF,OAAQ,SAIZ,SAASC,GAAT,GAAyB,IAATzE,EAAQ,EAARA,KACN0E,EAAO1E,EAAP0E,GACF/G,EAAUP,KAFM,EAGSkC,YAAYjB,EAA0B,CACnEsG,YAAa,SAAAC,GACXC,aAAaC,QAAQ,QAASC,KAAKC,UAAUJ,EAAKK,0BAF/CA,EAHe,sBAQMxF,IAAMyF,WAAWC,IAArCC,EARc,EAQdA,MAAOC,EARO,EAQPA,SARO,EAS8B5F,IAAMC,UAAS,GAT7C,mBASf4F,EATe,KASKC,EATL,KAUdhI,EAA6ByC,EAA7BzC,MAAO6B,EAAsBY,EAAtBZ,OAAQJ,EAAcgB,EAAdhB,UAkBvB,OAhBAS,IAAM2C,WAAU,WACd,IAAMoD,EAAgBJ,EAAMK,WAAaf,IAAOU,EAAMpF,KAAK0E,GAC3Da,EAAsBC,KACrB,CAACd,EAAIU,EAAMpF,KAAK0E,GAAIU,EAAMK,YAc3B,kBAACC,EAAA,EAAD,CAAMxH,UAAWP,EAAQa,WACvB,yBAAKN,UAAWP,EAAQyG,mBACtB,kBAACuB,EAAA,EAAD,CAAWC,MAAO5G,EAAWd,UAAWP,EAAQqB,YAChD,yBAAKd,UAAWP,EAAQ0G,UACtB,kBAACwB,EAAA,EAAD,KACE,kBAAC5H,EAAA,EAAD,CAAY6H,cAAY,EAAC3H,QAAQ,KAAKC,UAAU,MAC7Cb,GAEH,kBAACU,EAAA,EAAD,CAAYE,QAAQ,QAAQC,UAAU,IAAIP,MAAM,iBAC7CuB,IAGL,kBAAC2G,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYzC,QAzBtB,WACE8B,EAAS,CAAE5B,KAAM,WAAYwC,QAAS,CAAEjG,UACxCqF,EAASD,EAAMK,UAAY,CAAEhC,KAAM,cAAiB,CAAEA,KAAM,eAuBbyC,KAAK,QAAQrI,MAAM,WACvDyH,EAAqB,kBAACa,EAAA,EAAD,MAAY,kBAACC,EAAA,EAAD,OAEpC,kBAACJ,EAAA,EAAD,CACEzC,QAxBZ,WACE0B,EAAqB,CACnBhE,UAAW,CAAEoF,MAAM,eAAMrG,EAAP,CAAasG,WAAY,aAuBnCJ,KAAK,QACLrI,MAAM,aAEN,kBAAC0I,EAAA,EAAD,WASCC,OAjHf,WAAqB,IAAD,EACeC,YAAgBtC,IAAzCS,EADU,EACVA,KAAM8B,EADI,EACJA,QAASlH,EADL,EACKA,MAQvB,OAAIkH,EAEA,yBACEC,MAAO,CACLlI,QAAS,OACTmI,cAAe,SACflI,WAAY,SACZmI,UAAW,KAGb,kBAACC,EAAA,EAAD,OAIFtH,EAAc,qDAGhB,6BACGoF,EAAKmC,MAAMC,KAAI,SAAAhH,GAAI,OAClB,kBAACyE,GAAD,CAAMwC,IAAKjH,EAAK0E,GAAI1E,KAAMA,S,8BCVlC,IAAM5C,GAAYC,YAAW,CAC3B6J,OAAQ,CACNjI,MAAO,GACPuF,OAAQ,IAEV2C,KAAM,CACJC,aAAc,WACdC,SAAU,UAEZ7I,UAAW,CACTC,QAAS,OACT6I,aAAc,SACdC,oBAAqB,iBACrBC,QAAS,GACT9I,WAAY,SACZmI,UAAW,IAEbzC,kBAAmB,CACjBiD,SAAU,SACVI,WAAY,YAIhB,SAASC,GAAT,GAA+B,IAAT1H,EAAQ,EAARA,KACdrC,EAAUP,KADY,EAEGkC,YAAYjB,EAA0B,CACnEsG,YAAa,SAAAC,GACXC,aAAaC,QAAQ,QAASC,KAAKC,UAAUJ,EAAKK,0BAF/CA,EAFqB,oBAOpBjG,EAA6BgB,EAA7BhB,UAAWI,EAAkBY,EAAlBZ,OAAQ7B,EAAUyC,EAAVzC,MAQ3B,OACE,yBAAKW,UAAWP,EAAQa,WACtB,kBAACmJ,GAAA,EAAD,CAAQ7E,IAAK9D,EAAW+D,IAAI,iBAAiB7E,UAAWP,EAAQuJ,SAChE,yBAAKhJ,UAAWP,EAAQyG,mBACtB,kBAACnG,EAAA,EAAD,CAAYE,QAAQ,YAAYD,UAAWP,EAAQwJ,MAChD5J,GAEH,kBAACU,EAAA,EAAD,CACEJ,MAAM,gBACNM,QAAQ,QACRD,UAAWP,EAAQwJ,MAElB/H,IAGL,kBAAC4G,EAAA,EAAD,CAAYzC,QArBhB,WACE0B,EAAqB,CACnBhE,UAAW,CAAEoF,MAAM,eAAMrG,EAAP,CAAasG,WAAY,cAoBzC,kBAACsB,GAAA,EAAD,CAAQ/J,MAAM,YAMPgK,OAnFf,YAAoC,IAAVC,EAAS,EAATA,MASxB,OARsBC,cAAc,SAAAzK,GAAK,OAAIA,EAAM0K,YAAYC,GAAG,UAU9D,yBAAKtB,MAAO,CAAE/H,OAAQ,WACpB,kBAACX,EAAA,EAAD,CAAYJ,MAAM,gBAAgBM,QAAQ,UAA1C,UACU2J,EAAM5G,OADhB,KAGC4G,EAAMd,KAAI,SAAAhH,GAAI,OACb,kBAAC0H,GAAD,CAAYT,IAAKjH,EAAK0E,GAAI1E,KAAMA,S,mPC1BnC,IAAMkI,GAAmB5J,YAAH,MCevBlB,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCkB,UAAW,CACTC,QAAS,OACT6F,eAAgB,iBAElB6D,QAAS,CACP1J,QAAS,OACTmI,cAAe,SACfwB,QAAS,YAEXC,QAAS,CACPC,KAAM,YAERtJ,UAAW,CACTC,MAAO,KAETsJ,SAAU,CACR9J,QAAS,OACTC,WAAY,SACZ8J,YAAalL,EAAMG,QAAQ,GAC3BgL,aAAcnL,EAAMG,QAAQ,IAE9BiL,SAAU,CACRlE,OAAQ,GACRvF,MAAO,QA0HI0J,OAtHf,WAAuB,IACb/D,EAASgE,YAASV,IAAlBtD,KACFiE,EAAiBpJ,IAAMqJ,SAFT,EAGQrJ,IAAMyF,WAAWC,IAArCC,EAHY,EAGZA,MAAOC,EAHK,EAGLA,SAHK,EAIQ5F,IAAMC,SAAS,GAJvB,mBAIbqJ,EAJa,KAILC,EAJK,OAKsBvJ,IAAMC,SAAS,GALrC,mBAKbuJ,EALa,KAKEC,EALF,OAMUzJ,IAAMC,UAAS,GANzB,mBAMbyJ,EANa,KAMJC,EANI,OAO0B3J,IAAMC,SAAS,GAPzC,mBAOb2J,EAPa,KAOIC,EAPJ,KAQd3L,EAAUP,KAkDhB,OAhDAqC,IAAM2C,WAAU,WACd,IAAMmH,EAAY3E,EAAKkD,MAAM0B,WAAU,SAAAxJ,GAAI,OAAIA,EAAK0E,KAAOU,EAAMpF,KAAK0E,MACtE4E,EAAmBC,KAClB,CAAC3E,EAAKkD,MAAO1C,EAAMpF,KAAK0E,KAE3BjF,IAAM2C,WAAU,WACd,IAAMqH,EAAW7E,EAAKkD,MAAMuB,EAAkB,GAC1CN,GAAU,KAAQU,IACpBT,EAAU,GACV3D,EAAS,CAAE5B,KAAM,WAAYwC,QAAS,CAAEjG,KAAMyJ,QAE/C,CAAC7E,EAAKkD,MAAOiB,EAAQ1D,EAAUgE,IAsChC,oCACE,kBAAC3D,EAAA,EAAD,CAAMvH,QAAQ,WAAWD,UAAWP,EAAQa,WAC1C,yBAAKN,UAAWP,EAAQwK,SACtB,kBAACtC,EAAA,EAAD,CAAa3H,UAAWP,EAAQ0K,SAC9B,kBAACpK,EAAA,EAAD,CAAYE,QAAQ,KAAKC,UAAU,MAChCgH,EAAMpF,KAAKzC,OAEd,kBAACU,EAAA,EAAD,CAAYE,QAAQ,YAAYC,UAAU,IAAIP,MAAM,iBACjDuH,EAAMpF,KAAKZ,SAGhB,yBAAKlB,UAAWP,EAAQ4K,UACtB,kBAACvC,EAAA,EAAD,CAAYzC,QApBtB,WACE,IAAMhD,EAAWqE,EAAKkD,MAAMuB,EAAkB,GAC1C9I,GACF8E,EAAS,CAAE5B,KAAM,WAAYwC,QAAS,CAAEjG,KAAMO,OAkBtC,kBAACmJ,GAAA,EAAD,OAEF,kBAAC1D,EAAA,EAAD,CAAYzC,QAnDtB,WACE8B,EAASD,EAAMK,UAAY,CAAEhC,KAAM,cAAiB,CAAEA,KAAM,gBAmDjD2B,EAAMK,UACL,kBAACU,EAAA,EAAD,CAAOjI,UAAWP,EAAQ+K,WAE1B,kBAACtC,EAAA,EAAD,CAAWlI,UAAWP,EAAQ+K,YAGlC,kBAAC1C,EAAA,EAAD,CAAYzC,QArCtB,WACE,IAAMkG,EAAW7E,EAAKkD,MAAMuB,EAAkB,GAC1CI,GACFpE,EAAS,CAAE5B,KAAM,WAAYwC,QAAS,CAAEjG,KAAMyJ,OAmCtC,kBAACE,GAAA,EAAD,OAEF,kBAAC1L,EAAA,EAAD,CAAYE,QAAQ,YAAYC,UAAU,IAAIP,MAAM,iBA3CrD,IAAI+L,KAAe,IA4CAX,GA5CMY,cAAcC,OAAO,GAAI,KA+CnD,kBAACC,GAAA,EAAD,CACEC,YA1DV,WACEZ,GAAW,IA0DHa,UAvDV,WACEb,GAAW,GACXP,EAAeqB,QAAQC,OAAOpB,IAsDtB9F,SAhEV,SAA8B9C,EAAOiK,GACnCpB,EAAUoB,IAgEF9J,MAAOyI,EACPtF,KAAK,QACL4G,IAAK,EACLC,IAAK,EACLC,KAAM,OAGV,kBAAC,IAAD,CACEC,IAAK3B,EACL4B,WAAY,YAAgC,IAA7B1B,EAA4B,EAA5BA,OAAQE,EAAoB,EAApBA,cAChBE,IACHH,EAAUD,GACVG,EAAiBD,KAGrBtJ,IAAKyF,EAAMpF,KAAKL,IAChB+K,QAAStF,EAAMK,UACfxB,QAAM,IAER,kBAAC0B,EAAA,EAAD,CAAWzH,UAAWP,EAAQqB,UAAW4G,MAAOR,EAAMpF,KAAKhB,aAE7D,kBAAC,GAAD,CAAgB8I,MAAOlD,EAAKkD,U,oBCrInB6C,OAzBf,SAAqBvF,EAAOwF,GAC1B,OAAQA,EAAOnH,MACb,IAAK,YACH,OAAO,eACF2B,EADL,CAEEK,WAAW,IAGf,IAAK,aACH,OAAO,eACFL,EADL,CAEEK,WAAW,IAGf,IAAK,WACH,OAAO,eACFL,EADL,CAEEpF,KAAM4K,EAAO3E,QAAQjG,OAGzB,QACE,OAAOoF,ICbAD,GAAc1F,IAAMoL,cAAc,CAC7C7K,KAAM,CACJ0E,GAAI,uCACJnH,MAAO,sCACP6B,OAAQ,SACRJ,UAAW,8CACXW,IAAK,8CACLR,SAAU,KAEZsG,WAAW,IAqDEqF,OAlDf,WACE,IAAMC,EAAmBtL,IAAMyF,WAAWC,IAD7B,EAEa1F,IAAMuL,WAAWL,GAAaI,GAF3C,mBAEN3F,EAFM,KAECC,EAFD,KAGP4F,EAAgBlD,cAAc,SAAAzK,GAAK,OAAIA,EAAM0K,YAAYC,GAAG,SAC5DiD,EAAgBnD,cAAc,SAAAzK,GAAK,OAAIA,EAAM0K,YAAYC,GAAG,SAElE,OACE,kBAAC9C,GAAYgG,SAAb,CAAsB7K,MAAO,CAAE8E,QAAOC,aACpC,kBAAC+F,GAAA,EAAD,CAAQC,KAAK,MACX,kBAAC,EAAD,OAEF,kBAACC,GAAA,EAAD,CAAM9M,WAAS,EAACf,QAAS,GACvB,kBAAC6N,GAAA,EAAD,CACE3E,MAAO,CACL4E,WAAYN,EAAgB,GAAK,IAEnCO,MAAI,EACJC,GAAI,GACJC,GAAI,GAEJ,kBAAC,EAAD,MACA,kBAAC,GAAD,OAEF,kBAACJ,GAAA,EAAD,CACE3E,MACEuE,EACI,CACEpN,SAAU,QACVmB,MAAO,OACP0M,MAAO,EACPC,IAAK,IAEP,CACE9N,SAAU,QACVmB,MAAO,OACP4M,KAAM,EACNC,OAAQ,GAGhBN,MAAI,EACJC,GAAI,GACJC,GAAI,GAEJ,kBAAC,GAAD,U,2DCpDKpO,GARDyO,aAAe,CAC3BC,QAAS,CACPvI,KAAM,OACNwI,QAASC,KACTC,UAAWC,Q,wjBCAf,IAAMC,GAAS,IAAIC,KAAa,CAC9BC,KAAM,IAAIC,KAAc,CACtBC,IAAK,4CACLC,QAAS,CACPC,WAAW,KAGfC,MAAO,IAAIC,KACXC,SAAUxO,YAAF,MA2BRyO,UAAW,CACTC,SAAU,CACR/H,qBAAsB,SAACgI,EAAD,KAA8B,IAAxB5G,EAAuB,EAAvBA,MAAWuG,EAAY,EAAZA,MAC/BM,EAAcN,EAAMO,UAAU,CAClCC,MAAOlF,KAET,GAAIgF,EAAa,CAAC,IACRpF,EAAUoF,EAAVpF,MAEFuF,EADYvF,EAAMwF,MAAK,SAAAtN,GAAI,OAAIA,EAAK0E,KAAO2B,EAAM3B,MAEnDoD,EAAMyF,QAAO,SAAAvN,GAAI,OAAIA,EAAK0E,KAAO2B,EAAM3B,MADjB,uBAElBoD,GAFkB,CAEXzB,IAKf,OAJAuG,EAAMY,WAAW,CACfJ,MAAOlF,GACPtD,KAAM,CAAEkD,MAAOuF,KAEVA,EAET,MAAO,QAQTzI,GAAO,CACXkD,MAHe2F,QAAQ5I,aAAa6I,QAAQ,UAG1B3I,KAAK4I,MAAM9I,aAAa6I,QAAQ,UAAY,IAKhErB,GAAOuB,UAAU,CAAEhJ,UAEJyH,UCpEfwB,IAASC,OACP,kBAAC,KAAD,CAAgBzB,OAAQA,IACtB,kBAAC,KAAD,CAAkB/O,MAAOA,IACvB,kBAACyQ,GAAA,EAAD,MACA,kBAAC,GAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.f64d4584.chunk.js","sourcesContent":["import React from \"react\";\nimport { AppBar, Toolbar, Typography, makeStyles } from \"@material-ui/core\";\nimport { HeadsetTwoTone } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nfunction Header() {\n  const classes = useStyles();\n\n  return (\n    <AppBar color=\"primary\" position=\"fixed\">\n      <Toolbar>\n        <HeadsetTwoTone />\n        <Typography className={classes.title} variant=\"h6\" component=\"h1\">\n          Apollo Music Share\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Header;\n","import { gql } from \"apollo-boost\";\n\nexport const ADD_OR_REMOVE_FROM_QUEUE = gql`\n  mutation addOrRemoveFromQueue($input: SongInput!) {\n    addOrRemoveFromQueue(input: $input) @client\n  }\n`;\n\nexport const ADD_SONG = gql`\n  mutation addSong(\n    $title: String!\n    $artist: String!\n    $thumbnail: String!\n    $duration: Float!\n    $url: String!\n  ) {\n    insert_songs(\n      objects: {\n        title: $title\n        thumbnail: $thumbnail\n        duration: $duration\n        url: $url\n        artist: $artist\n      }\n    ) {\n      affected_rows\n    }\n  }\n`;\n","import React from \"react\";\nimport {\n  TextField,\n  InputAdornment,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  makeStyles\n} from \"@material-ui/core\";\nimport { Link, AddBoxOutlined } from \"@material-ui/icons\";\nimport ReactPlayer from \"react-player\";\nimport SoundcloudPlayer from \"react-player/lib/players/SoundCloud\";\nimport YoutubePlayer from \"react-player/lib/players/YouTube\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { ADD_SONG } from \"../graphql/mutations\";\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  urlInput: {\n    margin: theme.spacing(1)\n  },\n  addSongButton: {\n    margin: theme.spacing(1)\n  },\n  dialog: {\n    textAlign: \"center\"\n  },\n  thumbnail: {\n    width: \"90%\"\n  }\n}));\n\nconst DEFAULT_SONG = {\n  duration: 0,\n  title: \"\",\n  artist: \"\",\n  thumbnail: \"\"\n};\n\nfunction AddSong() {\n  const classes = useStyles();\n  const [addSong, { error }] = useMutation(ADD_SONG);\n  const [url, setUrl] = React.useState(\"\");\n  const [playable, setPlayable] = React.useState(false);\n  const [dialog, setDialog] = React.useState(false);\n  const [song, setSong] = React.useState(DEFAULT_SONG);\n\n  React.useEffect(() => {\n    const isPlayable =\n      SoundcloudPlayer.canPlay(url) || YoutubePlayer.canPlay(url);\n    setPlayable(isPlayable);\n  }, [url]);\n\n  function handleChangeSong(event) {\n    const { name, value } = event.target;\n    setSong(prevSong => ({\n      ...prevSong,\n      [name]: value\n    }));\n  }\n\n  function handleCloseDialog() {\n    setDialog(false);\n  }\n\n  async function handleEditSong({ player }) {\n    const nestedPlayer = player.player.player;\n    let songData;\n    if (nestedPlayer.getVideoData) {\n      songData = getYoutubeInfo(nestedPlayer);\n    } else if (nestedPlayer.getCurrentSound) {\n      songData = await getSoundcloudInfo(nestedPlayer);\n    }\n    setSong({ ...songData, url });\n  }\n\n  async function handleAddSong() {\n    try {\n      const { url, thumbnail, duration, title, artist } = song;\n      await addSong({\n        variables: {\n          url: url.length > 0 ? url : null,\n          thumbnail: thumbnail.length > 0 ? thumbnail : null,\n          duration: duration > 0 ? duration : null,\n          title: title.length > 0 ? title : null,\n          artist: artist.length > 0 ? artist : null\n        }\n      });\n      handleCloseDialog();\n      setSong(DEFAULT_SONG);\n      setUrl(\"\");\n    } catch (error) {\n      console.error(\"Error adding song\", error);\n    }\n  }\n\n  function getYoutubeInfo(player) {\n    const duration = player.getDuration();\n    const { title, video_id, author } = player.getVideoData();\n    const thumbnail = `http://img.youtube.com/vi/${video_id}/0.jpg`;\n    return {\n      duration,\n      title,\n      artist: author,\n      thumbnail\n    };\n  }\n\n  function getSoundcloudInfo(player) {\n    return new Promise(resolve => {\n      player.getCurrentSound(songData => {\n        if (songData) {\n          resolve({\n            duration: Number(songData.duration / 1000),\n            title: songData.title,\n            artist: songData.user.username,\n            thumbnail: songData.artwork_url.replace(\"-large\", \"-t500x500\")\n          });\n        }\n      });\n    });\n  }\n\n  function handleError(field) {\n    return error?.graphQLErrors[0]?.extensions?.path.includes(field);\n  }\n\n  const { thumbnail, title, artist } = song;\n  return (\n    <div className={classes.container}>\n      <Dialog\n        className={classes.dialog}\n        open={dialog}\n        onClose={handleCloseDialog}\n      >\n        <DialogTitle>Edit Song</DialogTitle>\n        <DialogContent>\n          <img\n            src={thumbnail}\n            alt=\"Song thumbnail\"\n            className={classes.thumbnail}\n          />\n          <TextField\n            value={title}\n            onChange={handleChangeSong}\n            margin=\"dense\"\n            name=\"title\"\n            label=\"Title\"\n            fullWidth\n            error={handleError(\"title\")}\n            helperText={handleError(\"title\") && \"Fill out field\"}\n          />\n          <TextField\n            value={artist}\n            onChange={handleChangeSong}\n            margin=\"dense\"\n            name=\"artist\"\n            label=\"Artist\"\n            fullWidth\n            error={handleError(\"artist\")}\n            helperText={handleError(\"artist\") && \"Fill out field\"}\n          />\n          <TextField\n            value={thumbnail}\n            onChange={handleChangeSong}\n            margin=\"dense\"\n            name=\"thumbnail\"\n            label=\"Thumbnail\"\n            fullWidth\n            error={handleError(\"thumbnail\")}\n            helperText={handleError(\"thumbnail\") && \"Fill out field\"}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog} color=\"secondary\">\n            Cancel\n          </Button>\n          <Button onClick={handleAddSong} variant=\"outlined\" color=\"primary\">\n            Add Song\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <TextField\n        className={classes.urlInput}\n        onChange={event => setUrl(event.target.value)}\n        value={url}\n        placeholder=\"Add Youtube or Soundcloud Url\"\n        fullWidth\n        margin=\"normal\"\n        type=\"url\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <Link />\n            </InputAdornment>\n          )\n        }}\n      />\n      <Button\n        disabled={!playable}\n        className={classes.addSongButton}\n        onClick={() => setDialog(true)}\n        variant=\"contained\"\n        color=\"primary\"\n        endIcon={<AddBoxOutlined />}\n      >\n        Add\n      </Button>\n      <ReactPlayer url={url} hidden onReady={handleEditSong} />\n    </div>\n  );\n}\n\nexport default AddSong;\n","import { gql } from \"apollo-boost\";\n\nexport const GET_SONGS = gql`\n  subscription getSongs {\n    songs(order_by: { created_at: desc }) {\n      artist\n      duration\n      id\n      thumbnail\n      title\n      url\n    }\n  }\n`;\n","import React from \"react\";\nimport {\n  CircularProgress,\n  Card,\n  CardMedia,\n  CardContent,\n  Typography,\n  CardActions,\n  IconButton,\n  makeStyles\n} from \"@material-ui/core\";\nimport { PlayArrow, Save, Pause } from \"@material-ui/icons\";\nimport { useMutation, useSubscription } from \"@apollo/react-hooks\";\nimport { GET_SONGS } from \"../graphql/subscriptions\";\nimport { SongContext } from \"../App\";\nimport { ADD_OR_REMOVE_FROM_QUEUE } from \"../graphql/mutations\";\n\nfunction SongList() {\n  const { data, loading, error } = useSubscription(GET_SONGS);\n\n  // const song = {\n  //   title: \"LÜNE\",\n  //   artist: \"MÖÖN\",\n  //   thumbnail: \"http://img.youtube.com/vi/--ZtUFsIgMk/0.jpg\"\n  // };\n\n  if (loading) {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          marginTop: 50\n        }}\n      >\n        <CircularProgress />\n      </div>\n    );\n  }\n  if (error) return <div>Error fetching songs</div>;\n\n  return (\n    <div>\n      {data.songs.map(song => (\n        <Song key={song.id} song={song} />\n      ))}\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    margin: theme.spacing(3)\n  },\n  songInfoContainer: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  songInfo: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  thumbnail: {\n    objectFit: \"cover\",\n    width: 140,\n    height: 140\n  }\n}));\n\nfunction Song({ song }) {\n  const { id } = song;\n  const classes = useStyles();\n  const [addOrRemoveFromQueue] = useMutation(ADD_OR_REMOVE_FROM_QUEUE, {\n    onCompleted: data => {\n      localStorage.setItem(\"queue\", JSON.stringify(data.addOrRemoveFromQueue));\n    }\n  });\n  const { state, dispatch } = React.useContext(SongContext);\n  const [currentSongPlaying, setCurrentSongPlaying] = React.useState(false);\n  const { title, artist, thumbnail } = song;\n\n  React.useEffect(() => {\n    const isSongPlaying = state.isPlaying && id === state.song.id;\n    setCurrentSongPlaying(isSongPlaying);\n  }, [id, state.song.id, state.isPlaying]);\n\n  function handleTogglePlay() {\n    dispatch({ type: \"SET_SONG\", payload: { song } });\n    dispatch(state.isPlaying ? { type: \"PAUSE_SONG\" } : { type: \"PLAY_SONG\" });\n  }\n\n  function handleAddOrRemoveFromQueue() {\n    addOrRemoveFromQueue({\n      variables: { input: { ...song, __typename: \"Song\" } }\n    });\n  }\n\n  return (\n    <Card className={classes.container}>\n      <div className={classes.songInfoContainer}>\n        <CardMedia image={thumbnail} className={classes.thumbnail} />\n        <div className={classes.songInfo}>\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {title}\n            </Typography>\n            <Typography variant=\"body1\" component=\"p\" color=\"textSecondary\">\n              {artist}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <IconButton onClick={handleTogglePlay} size=\"small\" color=\"primary\">\n              {currentSongPlaying ? <Pause /> : <PlayArrow />}\n            </IconButton>\n            <IconButton\n              onClick={handleAddOrRemoveFromQueue}\n              size=\"small\"\n              color=\"secondary\"\n            >\n              <Save />\n            </IconButton>\n          </CardActions>\n        </div>\n      </div>\n    </Card>\n  );\n}\n\nexport default SongList;\n","import React from \"react\";\nimport {\n  Typography,\n  Avatar,\n  IconButton,\n  makeStyles,\n  useMediaQuery\n} from \"@material-ui/core\";\nimport { Delete } from \"@material-ui/icons\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { ADD_OR_REMOVE_FROM_QUEUE } from \"../graphql/mutations\";\n\nfunction QueuedSongList({ queue }) {\n  const greaterThanMd = useMediaQuery(theme => theme.breakpoints.up(\"md\"));\n\n  // const song = {\n  //   title: \"LÜNE\",\n  //   artist: \"MÖÖN\",\n  //   thumbnail: \"http://img.youtube.com/vi/--ZtUFsIgMk/0.jpg\"\n  // };\n\n  return (\n    greaterThanMd && (\n      <div style={{ margin: \"10px 0\" }}>\n        <Typography color=\"textSecondary\" variant=\"button\">\n          QUEUE ({queue.length})\n        </Typography>\n        {queue.map(song => (\n          <QueuedSong key={song.id} song={song} />\n        ))}\n      </div>\n    )\n  );\n}\n\nconst useStyles = makeStyles({\n  avatar: {\n    width: 44,\n    height: 44\n  },\n  text: {\n    textOverflow: \"ellipsis\",\n    overflow: \"hidden\"\n  },\n  container: {\n    display: \"grid\",\n    gridAutoFlow: \"column\",\n    gridTemplateColumns: \"50px auto 50px\",\n    gridGap: 12,\n    alignItems: \"center\",\n    marginTop: 10\n  },\n  songInfoContainer: {\n    overflow: \"hidden\",\n    whiteSpace: \"nowrap\"\n  }\n});\n\nfunction QueuedSong({ song }) {\n  const classes = useStyles();\n  const [addOrRemoveFromQueue] = useMutation(ADD_OR_REMOVE_FROM_QUEUE, {\n    onCompleted: data => {\n      localStorage.setItem(\"queue\", JSON.stringify(data.addOrRemoveFromQueue));\n    }\n  });\n  const { thumbnail, artist, title } = song;\n\n  function handleAddOrRemoveFromQueue() {\n    addOrRemoveFromQueue({\n      variables: { input: { ...song, __typename: \"Song\" } }\n    });\n  }\n\n  return (\n    <div className={classes.container}>\n      <Avatar src={thumbnail} alt=\"Song thumbnail\" className={classes.avatar} />\n      <div className={classes.songInfoContainer}>\n        <Typography variant=\"subtitle2\" className={classes.text}>\n          {title}\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body2\"\n          className={classes.text}\n        >\n          {artist}\n        </Typography>\n      </div>\n      <IconButton onClick={handleAddOrRemoveFromQueue}>\n        <Delete color=\"error\" />\n      </IconButton>\n    </div>\n  );\n}\n\nexport default QueuedSongList;\n","import { gql } from \"apollo-boost\";\n\nexport const GET_QUEUED_SONGS = gql`\n  query getQueuedSongs {\n    queue @client {\n      id\n      duration\n      title\n      artist\n      thumbnail\n      url\n    }\n  }\n`;\n","import React from \"react\";\nimport QueuedSongList from \"./QueuedSongList\";\nimport {\n  Card,\n  CardContent,\n  Typography,\n  IconButton,\n  Slider,\n  CardMedia,\n  makeStyles\n} from \"@material-ui/core\";\nimport { SkipPrevious, PlayArrow, SkipNext, Pause } from \"@material-ui/icons\";\nimport { SongContext } from \"../App\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_QUEUED_SONGS } from \"../graphql/queries\";\nimport ReactPlayer from \"react-player\";\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"0px 15px\"\n  },\n  content: {\n    flex: \"1 0 auto\"\n  },\n  thumbnail: {\n    width: 150\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1)\n  },\n  playIcon: {\n    height: 38,\n    width: 38\n  }\n}));\n\nfunction SongPlayer() {\n  const { data } = useQuery(GET_QUEUED_SONGS);\n  const reactPlayerRef = React.useRef();\n  const { state, dispatch } = React.useContext(SongContext);\n  const [played, setPlayed] = React.useState(0);\n  const [playedSeconds, setPlayedSeconds] = React.useState(0);\n  const [seeking, setSeeking] = React.useState(false);\n  const [positionInQueue, setPositionInQueue] = React.useState(0);\n  const classes = useStyles();\n\n  React.useEffect(() => {\n    const songIndex = data.queue.findIndex(song => song.id === state.song.id);\n    setPositionInQueue(songIndex);\n  }, [data.queue, state.song.id]);\n\n  React.useEffect(() => {\n    const nextSong = data.queue[positionInQueue + 1];\n    if (played >= 0.99 && nextSong) {\n      setPlayed(0);\n      dispatch({ type: \"SET_SONG\", payload: { song: nextSong } });\n    }\n  }, [data.queue, played, dispatch, positionInQueue]);\n\n  function handleTogglePlay() {\n    dispatch(state.isPlaying ? { type: \"PAUSE_SONG\" } : { type: \"PLAY_SONG\" });\n  }\n\n  function handleProgressChange(event, newValue) {\n    setPlayed(newValue);\n  }\n\n  function handleSeekMouseDown() {\n    setSeeking(true);\n  }\n\n  function handleSeekMouseUp() {\n    setSeeking(false);\n    reactPlayerRef.current.seekTo(played);\n  }\n\n  function formatDuration(seconds) {\n    return new Date(seconds * 1000).toISOString().substr(11, 8);\n  }\n\n  function handlePlayNextSong() {\n    const nextSong = data.queue[positionInQueue + 1];\n    if (nextSong) {\n      dispatch({ type: \"SET_SONG\", payload: { song: nextSong } });\n    }\n  }\n\n  function handlePlayPrevSong() {\n    const prevSong = data.queue[positionInQueue - 1];\n    if (prevSong) {\n      dispatch({ type: \"SET_SONG\", payload: { song: prevSong } });\n    }\n  }\n\n  return (\n    <>\n      <Card variant=\"outlined\" className={classes.container}>\n        <div className={classes.details}>\n          <CardContent className={classes.content}>\n            <Typography variant=\"h5\" component=\"h3\">\n              {state.song.title}\n            </Typography>\n            <Typography variant=\"subtitle1\" component=\"p\" color=\"textSecondary\">\n              {state.song.artist}\n            </Typography>\n          </CardContent>\n          <div className={classes.controls}>\n            <IconButton onClick={handlePlayPrevSong}>\n              <SkipPrevious />\n            </IconButton>\n            <IconButton onClick={handleTogglePlay}>\n              {state.isPlaying ? (\n                <Pause className={classes.playIcon} />\n              ) : (\n                <PlayArrow className={classes.playIcon} />\n              )}\n            </IconButton>\n            <IconButton onClick={handlePlayNextSong}>\n              <SkipNext />\n            </IconButton>\n            <Typography variant=\"subtitle1\" component=\"p\" color=\"textSecondary\">\n              {formatDuration(playedSeconds)}\n            </Typography>\n          </div>\n          <Slider\n            onMouseDown={handleSeekMouseDown}\n            onMouseUp={handleSeekMouseUp}\n            onChange={handleProgressChange}\n            value={played}\n            type=\"range\"\n            min={0}\n            max={1}\n            step={0.01}\n          />\n        </div>\n        <ReactPlayer\n          ref={reactPlayerRef}\n          onProgress={({ played, playedSeconds }) => {\n            if (!seeking) {\n              setPlayed(played);\n              setPlayedSeconds(playedSeconds);\n            }\n          }}\n          url={state.song.url}\n          playing={state.isPlaying}\n          hidden\n        />\n        <CardMedia className={classes.thumbnail} image={state.song.thumbnail} />\n      </Card>\n      <QueuedSongList queue={data.queue} />\n    </>\n  );\n}\n\nexport default SongPlayer;\n","function songReducer(state, action) {\n  switch (action.type) {\n    case \"PLAY_SONG\": {\n      return {\n        ...state,\n        isPlaying: true\n      };\n    }\n    case \"PAUSE_SONG\": {\n      return {\n        ...state,\n        isPlaying: false\n      };\n    }\n    case \"SET_SONG\": {\n      return {\n        ...state,\n        song: action.payload.song\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport default songReducer;\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport AddSong from \"./components/AddSong\";\nimport SongList from \"./components/SongList\";\nimport SongPlayer from \"./components/SongPlayer\";\nimport { Grid, useMediaQuery, Hidden } from \"@material-ui/core\";\nimport songReducer from \"./reducer\";\n\nexport const SongContext = React.createContext({\n  song: {\n    id: \"01cf923a-e11b-4a58-ad2f-81712cb57e2c\",\n    title: \"Rap God (Explicit) [Official Video]\",\n    artist: \"Eminem\",\n    thumbnail: \"http://img.youtube.com/vi/XbGs_qK2PQA/0.jpg\",\n    url: \"https://www.youtube.com/watch?v=XbGs_qK2PQA\",\n    duration: 370\n  },\n  isPlaying: false\n})\n\nfunction App() {\n  const initialSongState = React.useContext(SongContext);\n  const [state, dispatch] = React.useReducer(songReducer, initialSongState);\n  const greaterThanSm = useMediaQuery(theme => theme.breakpoints.up(\"sm\"));\n  const greaterThanMd = useMediaQuery(theme => theme.breakpoints.up(\"md\"));\n\n  return (\n    <SongContext.Provider value={{ state, dispatch }}>\n      <Hidden only=\"xs\">\n        <Header />\n      </Hidden>\n      <Grid container spacing={3}>\n        <Grid\n          style={{\n            paddingTop: greaterThanSm ? 80 : 10\n          }}\n          item\n          xs={12}\n          md={7}\n        >\n          <AddSong />\n          <SongList />\n        </Grid>\n        <Grid\n          style={\n            greaterThanMd\n              ? {\n                  position: \"fixed\",\n                  width: \"100%\",\n                  right: 0,\n                  top: 70\n                }\n              : {\n                  position: \"fixed\",\n                  width: \"100%\",\n                  left: 0,\n                  bottom: 0\n                }\n          }\n          item\n          xs={12}\n          md={5}\n        >\n          <SongPlayer />\n        </Grid>\n      </Grid>\n    </SongContext.Provider>\n  );\n}\n\nexport default App;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport { teal, purple } from \"@material-ui/core/colors\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: teal,\n    secondary: purple\n  }\n});\n\nexport default theme;\n","import ApolloClient from \"apollo-client\";\nimport { WebSocketLink } from \"apollo-link-ws\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { gql } from \"apollo-boost\";\nimport { GET_QUEUED_SONGS } from \"./queries\";\n// import ApolloClient from \"apollo-boost\";\n\nconst client = new ApolloClient({\n  link: new WebSocketLink({\n    uri: \"wss://hot-cattle-43.hasura.app/v1/graphql\",\n    options: {\n      reconnect: true\n    }\n  }),\n  cache: new InMemoryCache(),\n  typeDefs: gql`\n    type Song {\n      id: uuid!\n      title: String!\n      artist: String!\n      thumbnail: String!\n      duration: Float!\n      url: String!\n    }\n\n    input SongInput {\n      id: uuid!\n      title: String!\n      artist: String!\n      thumbnail: String!\n      duration: Float!\n      url: String!\n    }\n\n    type Query {\n      queue: [Song]!\n    }\n\n    type Mutation {\n      addOrRemoveFromQueue(input: SongInput!): [Song]!\n    }\n  `,\n  resolvers: {\n    Mutation: {\n      addOrRemoveFromQueue: (_, { input }, { cache }) => {\n        const queryResult = cache.readQuery({\n          query: GET_QUEUED_SONGS\n        });\n        if (queryResult) {\n          const { queue } = queryResult;\n          const isInQueue = queue.some(song => song.id === input.id);\n          const newQueue = isInQueue\n            ? queue.filter(song => song.id !== input.id)\n            : [...queue, input];\n          cache.writeQuery({\n            query: GET_QUEUED_SONGS,\n            data: { queue: newQueue }\n          });\n          return newQueue;\n        }\n        return [];\n      }\n    }\n  }\n});\n\nconst hasQueue = Boolean(localStorage.getItem(\"queue\"));\n\nconst data = {\n  queue: hasQueue ? JSON.parse(localStorage.getItem(\"queue\")) : []\n};\n// const client = new ApolloClient({\n//   uri: \"https://apollo-music-share.herokuapp.com/v1/graphql\"\n// });\nclient.writeData({ data });\n\nexport default client;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { MuiThemeProvider, CssBaseline } from \"@material-ui/core\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport theme from \"./theme\";\nimport client from \"./graphql/client\";\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </MuiThemeProvider>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}